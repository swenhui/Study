<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
<!-- 	<aop:aspectj-autoproxy proxy-target-class="true"/> -->
	
	<!-- 注解 -->
	<context:component-scan base-package="com.rest.resource" />
	<context:component-scan base-package="com.rest.service" />
	
	<!-- 引入属性文件-->
	<context:property-placeholder location="classpath:/resource/druid.properties" />
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="${driver_class_name}"/>        
        <property name="url" value="${url}" />
        <property name="username" value="${user_name}" />
        <property name="password" value="${password}" />
      
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${initial_size}" />
        <property name="minIdle" value="${min_idle}" /> 
        <property name="maxActive" value="${max_active}" />
 
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${max_wait}" />
        <property name="useUnfairLock" value="${use_unfair_lock}" />
 
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${time_between_eviction_runs_millis}" />
 
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${min_evictable_idle_time_millis}" />
        
        <property name="validationQuery" value="${validation_query}" />
        <property name="testWhileIdle" value="${test_while_idle}" />
        
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="${pool_prepared_statements}" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${max_pool_prepared_statement_per_connection_size}" />
 
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="${filters}" /> 
    </bean>
    
    <!-- 事务管理器 --> 
    <bean id="transactionManager" class ="org.springframework.jdbc.datasource.DataSourceTransactionManager">   
           <property name ="dataSource" ref="dataSource"/>  
    </bean>
    
    <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<!-- 配置事务属性 -->
		<property name="transactionAttributes">
			<props>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="select*">PROPAGATION_REQUIRED,-Exception</prop>     
                <prop key="find*">PROPAGATION_REQUIRED,-Exception</prop>     
                <prop key="query*">PROPAGATION_REQUIRED</prop>     
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>   
			</props>
		</property>
		<!-- 配置事务管理器 -->  
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	 
	 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
       <property name="dataSource" ref="dataSource" />  
       <property name="mapperLocations" value="classpath:com/rest/dao/mapper/*Mapper.xml" />  
       <property name="typeAliasesPackage" value="com.rest.dao.bean" />  
   </bean>   
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
       <property name="basePackage" value="com.rest.dao.mapper" /> 
       <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />  
   </bean>
	 
</beans>